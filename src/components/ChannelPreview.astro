---
interface Props {
	channelId: string;
}

const { channelId } = Astro.props;

const {
	channelName,
	channelSubCount,
	channelIcon,
}: {
	channelName: string | null;
	channelSubCount: number | null;
	channelIcon: string | null;
} = await new Promise<{
	channelName: string | null;
	channelSubCount: number | null;
	channelIcon: string | null;
}>(async (resolve, reject) => {
	try {
		const response = await fetch(
			`https://api.jsalstats.xyz/channel/${channelId}`,
		);

		const data = await response.json();
		return resolve({
			channelName:
				data.info.name.length > 30
					? data.info.name.slice(0, 30) + "..."
					: data.info.name,
			channelSubCount: data.data.subsApi,
			channelIcon: data.info.channelIcon,
		});
	} catch (e) {
		console.error(e);
		return reject(e);
	}
});
---

<li class="link-card">
	<img src={channelIcon} alt={`PFP of ${channelName}`} />
	<span>
		<h2>{channelName}</h2>
		<p>{channelSubCount?.toLocaleString()} Subscribers</p>
	</span>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		align-items: center; /* Vertically center content */
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
		max-width: 800px;
	}
	.link-card img {
		width: 125px; /* Adjust image size as needed */
		height: auto;
		border-radius: 50%;
		margin-left: 5px;
		padding: 5px;
	}
	.link-card > span {
		flex: 1; /* Expand to fill available space */
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		font-size: xx-large;
	}
	p {
		margin-bottom: 0;
		font-size: x-large;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
